apply plugin: 'war'

task updGreet {
  doLast {
    println "This will add a version ${version} to ${buildDir}/resources/main/greeting.txt "
    def outF= new File("${buildDir}/resources/main/greeting.txt")
    if(!outF.exists()) {
      outF.createNewFile()
    }
    def inF= new File("${projectDir}/src/main/resources/greeting.txt")
    def lineF = inF.readLines()[0]
    //println 'from file '+inF+' '+lineF
    outF.write(lineF+' '+project.property('version'))
  }
}

build.finalizedBy(updGreet)

war {
  archiveName 'app.war'
  manifest {
    attributes("Implementation-Title": project.name, "Implementation-Version": project.version, "Implementation-Timestamp": new Date())
  }
}

repositories {
  mavenCentral()
}

dependencies {
  // This dependency is found on compile classpath of this component and consumers.
  //implementation 'com.google.guava:guava:27.0.1-jre'
  implementation 'log4j:log4j:1.2.17'
  implementation 'commons-io:commons-io:2.6'
  // Use JUnit test framework
  testImplementation 'junit:junit:4.12'
}

task incTask {
  doLast {
    def majorVer, minorVer, patchVer
    def resVer

    print 'This will increase version '
    print project.property('version')
    print ' => '
    majorVer = project.property('version').tokenize('.')[0] as Short
    minorVer = project.property('version').tokenize('.')[1] as Short
    patchVer = project.property('version').tokenize('.')[2] as Short
    patchVer++
    resVer =  majorVer+'.'+minorVer+'.'+patchVer
    println resVer

    ant.propertyfile(file: "gradle.properties") {
        entry(key: "version", value: resVer)
    }
    print 'and write to gradle.properties file'
  }
}
